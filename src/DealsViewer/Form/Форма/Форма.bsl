&НаКлиенте
Перем SQLiteObject; 

//		ИНТЕРФЕЙС

//обновляет надписи на форме
&НаКлиенте
Процедура ОбновитьНадписи()
	ЭтаФорма.Элементы.ДекорацияТекущаяБД.Заголовок = ПутьКБазе;
КонецПроцедуры



//		ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЬЗОВАТЕЛЬСКИЕ




//обработка нажатия кнопки "Работа с базами SQLite" - открыть форму работы с базами SQLite
&НаКлиенте
Процедура ФормаSQLite(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПутьКБазе", ПутьКБазе);

	ОткрытьФормуМодально("ВнешняяОбработка.DealsViewer.Форма.ФормаSQLite",ПараметрыФормы,ЭтаФорма);
КонецПроцедуры

//обработка нажатия кнопки "Настройки"
&НаКлиенте
Процедура ФормаНастроек(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПутьКБазе", ПутьКБазе);
	Рез=ОткрытьФормуМодально("ВнешняяОбработка.DealsViewer.Форма.ФормаНастройки", ПараметрыФормы,ЭтаФорма);
	
	//обновим настройки в этой форме
	ПолучитьНастройки(Ложь, Истина);
	
	
	ОбновитьНадписи();
	
КонецПроцедуры


//обработка нажатия кнопки "Обновить позиции"
&НаКлиенте
Процедура ОбновитьПозиции(Команда)
	
	ОбновитьПозицииКлиент();
	
КонецПроцедуры




//		ОБРАБОТЧИКИ СОБЫТИЙ СТАНДАРТНЫЕ




&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПолучитьНастройки(Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьНадписи();
	
	
	SQLiteInit();
	
	
	ОбновитьПозицииКлиент();
	
	
	ПодключитьОбработчикОжидания("ОбновитьПозицииКлиент", 1);
	
КонецПроцедуры


//		ОСНОВНОЙ АЛГОРИТМ



//выбирает данные из базы SQLite и возвращает их в массиве структур (эрзац таблицы значений на клиенте)
&НаКлиенте
Функция ПолучитьПозицииИзSQLite()
	
	МассивСтруктур = Новый Массив;
	try
		
		
		ТекстЗапроса = 
		"select 
		|	ticker, 
		|	class,
		|	quantity, 
		|	amount,
		|	bid,
		|	ask,
		|	last
		|from 
		|	positions";
		RS=SQLiteQuery(ТекстЗапроса);
		
		Пока НЕ RS.EOF Цикл
			
			СтрТЗ = Новый Структура;
			СтрТЗ.Вставить("ticker", RS.Fields(0).value);
			СтрТЗ.Вставить("class", RS.Fields(1).value);
		    СтрТЗ.Вставить("quantity", RS.Fields(2).value);
		    СтрТЗ.Вставить("amount", RS.Fields(3).value);
			
			СтрТЗ.Вставить("bid", RS.Fields(4).value);
			СтрТЗ.Вставить("ask", RS.Fields(5).value);
			СтрТЗ.Вставить("last", RS.Fields(6).value);
			МассивСтруктур.Добавить(СтрТЗ);
		    
		    RS.MoveNext();
		КонецЦикла;
	except
	endtry;
	Возврат МассивСтруктур;
	
КонецФункции

//заполняет таблицу значений данными из массива структур, рассчитывает PnL
&НаСервере
Процедура ЗаполнитьТаблицуПозицийСервер(structArray)
	
	ТЗПоз = ДанныеФормыВЗначение(ТаблицаПозиций, Тип("ТаблицаЗначений"));
	//:ТЗПоз=Новый ТаблицаЗначений;
	//:structArray = Новый Массив;
	
	ТЗПоз.Очистить();
	
	for each str in structArray do
		НовСтр					= ТЗПоз.Добавить();
		НовСтр.Тикер			= str.ticker;
		НовСтр.Количество		= str.quantity;
		НовСтр.Себестоимость	= str.amount;
		НовСтр.bid				= str.bid;
		НовСтр.ask				= str.ask;
		НовСтр.last				= str.last;
		
		if str.quantity > 0 then
			//long
			PnL	= (str.bid * str.quantity) - str.amount;
			
		else
			//short
			PnL	= (str.ask * (-1*str.quantity)) - str.amount;
			
		endif;
		
		НовСтр.PnL				= PnL;
	enddo;
	
	
	ЗначениеВДанныеФормы(ТЗПоз, ТаблицаПозиций);
	
КонецПроцедуры


//обновление позиций в таблице на форме. чтобы вызывать ее из обработчика ожидания, процедура не должна содержать параметров
&НаКлиенте
Процедура ОбновитьПозицииКлиент()
	
	//выбрать позиции из базы данных SQLite
	МассивСтруктур = ПолучитьПозицииИзSQLite();
	
	//заполнить ТЗ позиций на форме
	ЗаполнитьТаблицуПозицийСервер(МассивСтруктур);
	
КонецПроцедуры




//		СЕРВИСНЫЕ ФУНКЦИИ

//		РАБОТА С SQLITE


//http://infostart.ru/public/103371/
&НаКлиенте
Функция SQLiteInit() Экспорт
    SQLiteObject = Новый COMОбъект("ADODB.Connection");
    //SQLiteConnectionString = "DRIVER=SQLite3 ODBC Driver;Database=" + ФайлБД + ";";
	//SQLiteConnectionString = "DRIVER=SQLite3 ODBC Driver;Database=" + ФайлБД + ";LongNames=0;Timeout=1000;NoTXN=0;SyncPragma=NORMAL;StepAPI=0;";
	SQLiteConnectionString = "DSN=SQLite3 Datasource;Database=" + ПутьКБазе + ";StepAPI=0;SyncPragma=NORMAL;NoTXN=;Timeout=100000;ShortNames=;LongNames=;NoCreat=;NoWCHAR=;FKSupport=;JournalMode=;OEMCP=;LoadExt=;BigInt=;JDConv=;PWD=";
    Попытка
        SQLiteObject.Open(SQLiteConnectionString);
    Исключение
        //Сообщить("Невозможно подключится к драйверу SQLite. Возможно файл [" + ФайлБД + "] открыт другим пользователем или программой!");
		Сообщить(ОписаниеОшибки());
        Возврат Ложь;
    КонецПопытки;
    Возврат Истина;
КонецФункции

//http://infostart.ru/public/103371/
&НаКлиенте
Функция SQLiteQuery(Запрос) Экспорт
    SQLiteRS = Новый COMОбъект("ADODB.Recordset");
    Попытка
        SQLiteRS = SQLiteObject.Execute(Запрос);
    Исключение
        Сообщить("Невозможно выполнить SQL запрос " + ОписаниеОшибки(), СтатусСообщения.Важное);
        Возврат Ложь;
    КонецПопытки;
    
    Возврат SQLiteRS;
КонецФункции

//http://infostart.ru/public/103371/
&НаКлиенте
Функция Example()
	
	//МаркиАвтомобилей = SQLiteQuery("SELECT ID, Name FROM Auto ORDER BY ID");
	//Пока НЕ МаркиАвтомобилей.EOF Цикл
	//    ID = МаркиАвтомобилей.Fields(0).value;
	//    Name = МаркиАвтомобилей.Fields(1).value;
	//    Сообщить("ID/Name: " + ID + "/" + Name);
	//    МаркиАвтомобилей.MoveNext();
	//КонецЦикла;
	
КонецФункции

//		РАБОТА С НАСТРОЙКАМИ ОБРАБОТКИ

&НаСервере
Процедура ПолучитьНастройки(Отказ, СтандартнаяОбработка)
	
	СписокНастроек = ХранилищеПользовательскихНастроекОтчетов.ПолучитьСписок("ВнешняяОбработка.DealsViewer");
	
	Настройки = ХранилищеПользовательскихНастроекОтчетов.Загрузить("ВнешняяОбработка.DealsViewer","НастройкиБД");
	Если ТипЗнч(Настройки)=Тип("Соответствие") Тогда
		ПутьКБазе = Настройки["DealsViewerSQLiteDB"];
	КонецЕсли;
	
КонецПроцедуры


